name: Dev Backend App Checks

on:
  push:
    branches: [ "develop", "feature/setup-git-workflows" ]
  pull_request:
    branches: [ "develop", "feature/setup-git-workflows" ]
#  release:
#    types: [published]

jobs:
  build_backend:
    name: Build Dev Backend App
    runs-on: ubuntu-latest
    #    permissions:
    #      contents: write
    env:
      DOCKER_COMPOSE_FILE: docker/infrastructure/dev/docker-compose-dev.yml
      ENV_PREFIX: dev
      DOCKER_APP_CONTAINER_NAME: backend
    steps:
      - uses: actions/checkout@v4
      - name: Docker Version
        run: |
          docker version
      - name: Docker Compose Settings
        run: |
          echo "UID=$(id -u)" >> .env
          echo "GID=$(id -g)" >> .env
      - name: Build The Docker Images
        run: |
          make ${{ env.ENV_PREFIX }}-build
      - name: Run The Docker Images
        run: |
          make ${{ env.ENV_PREFIX }}-up
      - name: Check Running Containers
        run: |
          docker ps -a
      - name: PHP Version
        run: |
          docker compose --file=${{ env.DOCKER_COMPOSE_FILE }} exec ${{ env.DOCKER_APP_CONTAINER_NAME }} php --version
      - name: Composer Version
        run: |
          docker compose --file=${{ env.DOCKER_COMPOSE_FILE }} exec ${{ env.DOCKER_APP_CONTAINER_NAME }} composer --version
      #      - name: Copy .env
      #        run: |
      #          make env-copy
      #      - name: Install Composer Dependencies
      #        run: |
      #          make composer-install
      - name: Checks the Database Availability
        run: |
          make dev-db-check


      # Use filter if project contains separated frontend app
      #      - uses: dorny/paths-filter@v2
      #        id: filter
      #        with:
      #          filters: |
      #              Mobile:
      #                - 'frontend/**'
      #      - name: Get npm dependencies.
      #        if: steps.filter.outputs.frontend == 'true'
      #        run: npm install
